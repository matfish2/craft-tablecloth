{% set options = datatable.tableOptions %}
{% block tablewrap %}
<div class="ctc-container ctc-mx-auto ctc-py-6 ctc-px-4 tablecloth-wrapper tablecloth__{{ datatable.handle }}"
     x-data="tablecloth('{{ datatable.handle }}')"
     x-cloak>
    <template x-if="!loading">
        {% block table %}
        <div>
            {% include datatable.componentPath('tableTop') %}
            <div class="ctc-overflow-x-auto ctc-bg-white ctc-rounded-lg ctc-shadow ctc-overflow-y-auto ctc-overflow-x-hidden ctc-relative"
                 style="height: {{ datatable.getTableOption('height') }}px;">
                {% include datatable.componentPath('table') %}
            </div>
            <div class="ctc-flex ctc-justify-between ctc-items-center ctc-flex-col-reverse md:ctc-flex-row">
                {% block count %}
                    <div class=>
                        {% if 'entriesCount' in options.components %}
                            <template x-if="data.length>0">
                                {% include datatable.componentPath('entriesCount') %}
                            </template>
                        {% endif %}
                    </div>

                {% endblock %}
                {% block pagination %}
                    <div class="ctc-flex ctc-flex-col-reverse ctc-text-center md:ctc-flex-row md:ctc-items-center">
                        {% if 'pagesCount' in options.components %}
                            {% include datatable.componentPath('pagesCount') %}
                        {% endif %}
                        {% if 'pagination' in options.components %}
                            <template x-if="pages>1">
                                {% include datatable.componentPath('pagination') %}
                            </template>
                        {% endif %}
                    </div>
                {% endblock %}
            </div>
        </div>
        {% endblock %}
    </template>
</div>
{% endblock %}

<script>
    window.CraftTablecloth = {
        cpUrl: '{{ cpUrl() }}'
    };

    window.CraftTablecloth_{{ datatable.handle }} = {{ datatable.jsData | json_encode | raw }};
    window.Tablecloth_{{ datatable.handle }} = {
        on(event, callback) {
            window.addEventListener(`tablecloth.{{ datatable.handle }}.${event}`, (e) => {
                callback(e)
            })
        },
        emit(event, data) {
            const e = new CustomEvent(`tablecloth.{{ datatable.handle }}.${event}`, {
                detail: data
            })
            window.dispatchEvent(e)
        }
    };
</script>